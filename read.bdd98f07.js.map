{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sGCAzD,MAAMC,EAAYC,SAASC,cAAc,qCACnCC,EAA2BF,SAASC,cAAc,mCAClDE,EAAyBH,SAASC,cAAc,wBAChDG,EAAwBJ,SAASC,cAAc,sBAQrDF,EAAUM,iBAAiB,SAL3B,WACIH,EAAyBI,UAAUC,OAAO,mBAC1CJ,EAAuBG,UAAUC,OAAO,qBACxCH,EAAsBE,UAAUC,OAAO,kB,UCiB3CC,EAAe,C,KA1BF,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBd,KAAKe,UAAUF,GACvCG,aAAaC,QAAQL,EAAKE,E,CAC1B,MAAOI,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCR,IACX,IACE,MAAME,EAAkBE,aAAaK,QAAQT,GAC7C,OAA2B,OAApBE,OAA2BQ,EAAYtB,KAAKC,MAAMa,E,CACzD,MAAOI,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI9BR,IACX,IACII,aAAaO,WAAWX,E,CAC5B,MAAOM,GACPC,QAAQD,MAAM,sBAAuBA,EAAME,Q,ICtB/CI,EAAiB,IAAAC,IAAoB3B,EAAA,SAAA4B,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCG5F,MAAMC,EAAoB5B,SAASC,cAAc,gCAG3C4B,GAFoB7B,SAASC,cAAc,4BAExBO,EAAgBsB,KAAK,sBAAwB,KA6DtE,WACI,MAAMC,EA3DGF,EAAiBG,KAAI,EAACC,IAACA,EAAGC,IAAEA,EAAGC,IAAEA,EAAGC,MAAEA,EAAKC,SAAEA,EAAQC,KAAEA,EAAIC,KAAEA,EAAIC,SAAEA,KAC7D,6FAEGP,qEAGGC,8BACAC,sLAILC,yHAGAC,iPAMEC,8EAGMC,+lBAgBKE,EAAApB,0KAIbmB,6PAMUC,EAAApB,0HAMjBqB,KAAK,IAKdd,EAAkBe,mBAAmB,YAAaZ,E,CAGtDa","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-cb136ced3f2d3e8a.js","src/js/read-page-dropdown.js","src/js/storage.js","node_modules/@parcel/runtime-js/lib/runtime-246d7f17877b7a3f.js","src/js/markup-read-page.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jewIc\\\":\\\"read.bdd98f07.js\\\",\\\"9v6fF\\\":\\\"symbol-defs.6a6b8729.svg\\\"}\"));","const dateBtnEl = document.querySelector('.read__dropdown-content-admin-btn')\nconst dropdownContentWrapperEl = document.querySelector('.read__dropdown-content-wrapper')\nconst dropdownrrowDownIconEl = document.querySelector('.read__btn-icon-down')\nconst dropdownArrowUpIconEl = document.querySelector('.read__btn-icon-up')\n\n// Клик на кнопку откривает список\nfunction showAlreadyReadNewsList() {\n    dropdownContentWrapperEl.classList.toggle('visible-content')\n    dropdownrrowDownIconEl.classList.toggle('invisible-content')\n    dropdownArrowUpIconEl.classList.toggle('visible-content')\n}\ndateBtnEl.addEventListener('click', showAlreadyReadNewsList)","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n    try {\n        localStorage.removeItem(key);\n  } catch (error) {\n    console.error(\"Remove item error: \", error.message);\n  }\n};\n\nexport default {\n    save,\n    load,\n    remove\n};","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9v6fF\")).toString();","import localStorageAPI from './storage'\nimport svg from '../images/symbol-defs.svg'\n\nconst alreadyReadListEl = document.querySelector(\".read__dropdown-content-list\")\nconst favoriteNewsTitle = document.querySelector(\".favorite__section-title\")\n\nconst alreadyReadArray = localStorageAPI.load(\"already-read-news\") || []\n\nfunction createMarkupAlreadyReadNews() {\n      return alreadyReadArray.map(({uri, src, alt, title, subtitle, date, href, category}) => {\n            return `<li\n                class=\"read__dropdown-content-item theme-light\"\n                id=\"${uri}\"\n              >\n                <img\n                  src=\"${src}\"\n                  alt=\"${alt}\"\n                  class=\"read__dropdown-content-img theme-light\"\n                />\n                <h2 class=\"read__dropdown-content-title theme-light\">\n                  ${title}\n                </h2>\n                <h3 class=\"read__dropdown-content-subtitle theme-light\">\n                  ${subtitle}\n                </h3>\n                <div\n                  class=\"read__dropdown-content-date-link-wrapper theme-light\"\n                >\n                  <p class=\"read__dropdown-content-date theme-light\">\n                    ${date}\n                  </p>\n                  <a\n                    href=\"${href}\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    class=\"read__dropdown-content-link theme-light\"\n                    >Read more</a\n                  >\n                </div>\n                <button\n                  type=\"button\"\n                  class=\"read__dropdown-content-btn theme-light\"\n                >\n                  Add to favorite\n                  <svg\n                    style=\"fill: none\"\n                    class=\"read__dropdown-content-btn-icon theme-light\"\n                  >\n                    <use href=\"${svg}#icon-heart\"></use>\n                  </svg>\n                </button>\n                <p class=\"read__dropdown-content-category theme-light\">\n                  ${category}\n                </p>\n                <p class=\"read__dropdown-content-already-read\">\n                  Already read\n                  <svg class=\"read__dropdown-content-already-read-icon\">\n                    <use\n                      href=\"${svg}#icon-icon-check\"\n                    ></use>\n                  </svg>\n                </p>\n              </li>`\n        })\n            .join('')\n    }\n\nfunction appendMarkup() {\n    const markup = createMarkupAlreadyReadNews()\n    alreadyReadListEl.insertAdjacentHTML(\"beforeend\", markup)\n}\n\nappendMarkup()"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b9511cc83da680ae$var$dateBtnEl","document","querySelector","$b9511cc83da680ae$var$dropdownContentWrapperEl","$b9511cc83da680ae$var$dropdownrrowDownIconEl","$b9511cc83da680ae$var$dropdownArrowUpIconEl","addEventListener","classList","toggle","$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","value","serializedState","stringify","localStorage","setItem","error","console","message","getItem","undefined","removeItem","$10db6f286535da77$exports","URL","resolve","import","meta","url","toString","$03db5a30cb6c37f5$var$alreadyReadListEl","$03db5a30cb6c37f5$var$alreadyReadArray","load","markup","map","uri","src","alt","title","subtitle","date","href","category","$parcel$interopDefault","join","insertAdjacentHTML","$03db5a30cb6c37f5$var$appendMarkup"],"version":3,"file":"read.bdd98f07.js.map"}